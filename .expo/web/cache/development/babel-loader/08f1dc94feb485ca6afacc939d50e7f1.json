{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/user/Documentos/Git/App_PDS2/src/view/Index/LostPet/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Picker } from '@react-native-community/picker';\nimport styles from \"./styles\";\nimport Modal from 'react-native-modal';\nimport { Entypo } from \"@expo/vector-icons\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Header from \"../../../components/Header\";\nimport { SvgUri } from 'react-native-svg';\nimport { BackgroundImage } from 'react-native-elements/dist/config';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { UserContext } from \"../../../context/UserContext\";\nimport Api from \"../../Apis/Map/Api\";\n\nfunction LostPet(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImage = _useState2[0],\n      setSelectedImage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      status = _useState4[0],\n      setSelectedValue = _useState4[1];\n\n  var _route$params = route.params,\n      coordinate = _route$params.coordinate,\n      type = _route$params.type;\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      information = _useState6[0],\n      setInformation = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      photos = _useState8[0],\n      setPhotos = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      animal_id = _useState10[0],\n      setAnimal_ID = _useState10[1];\n\n  var _useContext = useContext(UserContext),\n      person = _useContext.state;\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult, count;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"É necessário dar permissão para acessar a galeria\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context.sent;\n\n            if (!(pickerResult.cancelled === true)) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 11:\n            count = \"localUri\" + selectedImage.length;\n            setSelectedImage(function (selectedImage) {\n              return [].concat(_toConsumableArray(selectedImage), [{\n                count: pickerResult.uri\n              }]);\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleRegisterButtonClick = function handleRegisterButtonClick() {\n    var json;\n    return _regeneratorRuntime.async(function handleRegisterButtonClick$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setAnimal_ID(3);\n\n            if (!(animal_id != '' && status != null && information != '' && coordinate != null && person.id != '')) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(Api.registerEvent(type, status, coordinate.latitude, coordinate.longitude, information, animal_id, person.id));\n\n          case 4:\n            json = _context2.sent;\n\n            if (json.status) {\n              alert(\"Evento cadastrado!\");\n            } else {\n              alert(\"Houve algum erro!\");\n            }\n\n            _context2.next = 9;\n            break;\n\n          case 8:\n            alert(\"[*] Campos vazios!\");\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    title: \"Animal Perdido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), React.createElement(BackgroundImage, {\n    source: require(\"../../../assets/LostPet/walpaper2.png\"),\n    style: styles.wlpBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'rgba(255, 255, 255, 0.90)',\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.titles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.txtTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"Preencha as informa\\xE7\\xF5es do\"), React.createElement(Text, {\n    style: styles.txtTitle2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"Evento!\")), React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.containerOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles.optionsEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.Optiontitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }, \"Meu Pet\"), React.createElement(Ionicons, {\n    name: \"open-outline\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 41\n    }\n  }))), React.createElement(View, {\n    style: styles.containerOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.txtOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Infome o status\"), React.createElement(Picker, {\n    selectedValue: status,\n    style: styles.pickerField,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, React.createElement(Picker.Item, {\n    color: \"red\",\n    label: \"N\\xE3o Resolvido\",\n    value: \"N\\xE3o Resolvido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }), React.createElement(Picker.Item, {\n    color: \"green\",\n    label: \"Resolvido\",\n    value: \"Resolvido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }), React.createElement(Picker.Item, {\n    color: \"orange\",\n    label: \"Em Andamento\",\n    value: \"Em Andamento\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }))), React.createElement(View, {\n    style: styles.containerOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.txtOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, \"Informa\\xE7\\xF5es\"), React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Informe alguns detalhes \",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 10,\n    multiline: true,\n    onChangeText: function onChangeText(t) {\n      return setInformation(t);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnAddPhoto,\n    onPress: openImagePickerAsync,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 24,\n      width: 24\n    },\n    source: require(\"../../../assets/Events/camera.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 36\n    }\n  })), React.createElement(View, {\n    style: styles.containerImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  }, selectedImage.map(function (localUri) {\n    return React.createElement(Image, {\n      style: styles.imgsContainer,\n      key: localUri.count,\n      source: {\n        uri: localUri.count\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 45\n      }\n    });\n  })))), React.createElement(View, {\n    style: {\n      width: '95%',\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 30\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnAddEvent,\n    onPress: handleRegisterButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, \"Adicionar evento\"), React.createElement(Image, {\n    style: styles.iconButtonsubmit,\n    source: require(\"../../../assets/login/paw.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }))))))));\n}\n\nexport default LostPet;","map":{"version":3,"sources":["/home/user/Documentos/Git/App_PDS2/src/view/Index/LostPet/index.js"],"names":["React","useState","useEffect","useContext","Picker","styles","Modal","Entypo","Header","SvgUri","BackgroundImage","Ionicons","ImagePicker","UserContext","Api","LostPet","route","navigation","selectedImage","setSelectedImage","status","setSelectedValue","params","coordinate","type","information","setInformation","photos","setPhotos","animal_id","setAnimal_ID","person","state","openImagePickerAsync","requestMediaLibraryPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","cancelled","count","length","uri","handleRegisterButtonClick","id","registerEvent","latitude","longitude","json","container","flex","require","wlpBackground","backgroundColor","titles","txtTitle","txtTitle2","body","containerOptions","optionsEvent","Optiontitle","txtOption","pickerField","itemValue","itemIndex","textArea","t","btnAddPhoto","height","width","containerImage","map","localUri","imgsContainer","paddingTop","btnAddEvent","color","iconButtonsubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useContext } from 'react';\nimport { Image,View,Button,Text,TouchableOpacity, TextInput } from 'react-native';\nimport { Picker } from '@react-native-community/picker';\nimport styles from \"./styles\";\nimport Modal from 'react-native-modal';\nimport { Entypo } from \"@expo/vector-icons\";\nimport { ScrollView } from 'react-native';\nimport Header from \"../../../components/Header\";\nimport { SvgUri } from 'react-native-svg';\nimport { BackgroundImage } from 'react-native-elements/dist/config';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as ImagePicker from 'expo-image-picker';\nimport {UserContext} from \"../../../context/UserContext\";\nimport Api from \"../../Apis/Map/Api\";\n\n\nfunction LostPet({ route,navigation }) {\n\n   \n    const [selectedImage, setSelectedImage] = useState([]);\n\n    const [status, setSelectedValue] = useState(null);\n    const { coordinate,type }= route.params;\n    const [information,setInformation] = useState(null);\n    const [photos,setPhotos] = useState(null);\n    const [animal_id,setAnimal_ID] = useState(null);\n\n\n    const { state:person }=useContext(UserContext);\n\n  \n    let openImagePickerAsync = async () => {\n\n        let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    \n        if (permissionResult.granted === false) {\n          alert(\"É necessário dar permissão para acessar a galeria\");\n          return;\n        }\n    \n        let pickerResult = await ImagePicker.launchImageLibraryAsync();\n\n        if (pickerResult.cancelled === true) {\n            return;\n        }\n        const count=\"localUri\"+selectedImage.length;\n\n        setSelectedImage((selectedImage)=>[...selectedImage,{ count: pickerResult.uri }]);\n     \n\n    }\n    \n    const handleRegisterButtonClick = async() =>{\n\n        setAnimal_ID(3);\n      \n   \n        if( animal_id != '' && status != null && information != '' && coordinate != null  && person.id != '' ){\n\n            \n            let json = await Api.registerEvent(\n\n                type,\n                status,\n                coordinate.latitude,\n                coordinate.longitude,\n                information,\n                animal_id,\n                person.id\n                \n            );\n            \n        \n            if( json.status ){\n                \n                alert(\"Evento cadastrado!\");\n\n            }else{\n\n                alert(\"Houve algum erro!\");\n            }\n            \n        }else{\n\n            alert(\"[*] Campos vazios!\");\n        }\n\n    }\n\n\n\n    return(\n      \n            <View style={ styles.container }>\n              <ScrollView style={{ flex:1 }}>\n                <Header navigation={navigation} title=\"Animal Perdido\" />\n                <BackgroundImage source={ require(\"../../../assets/LostPet/walpaper2.png\") } style={ styles.wlpBackground }>\n                    <View style={{  backgroundColor: 'rgba(255, 255, 255, 0.90)',flex:1 }}>   \n                        <View style={ styles.titles }>\n                            <Text style={ styles.txtTitle }>Preencha as informações do</Text>\n                            <Text style={ styles.txtTitle2 }>Evento!</Text>\n                        </View>\n                        <View style={ styles.body }>\n                            \n                            <View style={ styles.containerOptions } >\n                            <TouchableOpacity>\n                                <View style={ styles.optionsEvent }>\n                                        \n                                        <Text style={ styles.Optiontitle }>Meu Pet</Text>\n                                        <Ionicons name=\"open-outline\" size={24} color=\"black\" /> \n                                </View>\n                            </TouchableOpacity>\n                            <View style={ styles.containerOptions }>\n                                <Text style={ styles.txtOption }>Infome o status</Text>\n                                <Picker\n                                    selectedValue={status}\n                                    style={ styles.pickerField }\n                                    onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\n                                   \n                                    >\n                                    <Picker.Item color=\"red\" label=\"Não Resolvido\" value=\"Não Resolvido\" />\n                                    <Picker.Item color=\"green\" label=\"Resolvido\" value=\"Resolvido\" />\n                                    <Picker.Item color=\"orange\" label=\"Em Andamento\" value=\"Em Andamento\" />\n\n                                </Picker>\n                            </View>\n                            <View style={ styles.containerOptions }>\n                                <Text style={ styles.txtOption }>Informações</Text>\n                                <TextInput\n                                    style={styles.textArea}\n                                    underlineColorAndroid=\"transparent\"\n                                    placeholder=\"Informe alguns detalhes \"\n                                    placeholderTextColor=\"grey\"\n                                    numberOfLines={10}\n                                    multiline={true}\n                                    onChangeText={t=>setInformation(t)}\n                                    />\n                            </View>\n    \n                            </View>\n                            <View >\n                                <TouchableOpacity style={ styles.btnAddPhoto } onPress={openImagePickerAsync} >\n                                   <Image \n\n                                        style={{ height:24,width:24}}\n                                        source={ require(\"../../../assets/Events/camera.png\") }\n                                   \n                                   />\n                                </TouchableOpacity>\n                                <View style={styles.containerImage}>\n                                    <ScrollView horizontal={true}>\n                                        \n                                            {\n\n                                            selectedImage.map( localUri =>   \n                                            <Image\n                                                style={ styles.imgsContainer }\n                                                key={ localUri.count }\n                                                source={{ uri:localUri.count }}\n                                                />\n                                            )}\n                                        \n                                    </ScrollView>  \n                                </View>\n                             </View>\n                             <View style={{ width:'95%',paddingTop:10  }}>\n                                <TouchableOpacity style={ styles.btnAddEvent } onPress={handleRegisterButtonClick}  >\n                                    <Text style={{ color:'white' }}>Adicionar evento</Text> \n                                    <Image style={ styles.iconButtonsubmit } source={require(\"../../../assets/login/paw.png\")} />\n                                </TouchableOpacity>\n                             </View>\n                        </View>\n                    </View>\n                </BackgroundImage>\n                </ScrollView>\n           </View>\n\n    );\n}\nexport default LostPet;"]},"metadata":{},"sourceType":"module"}