{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/user/Documentos/Git/App_PDS2/node_modules/react-native-image-modal/dist/index.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageDetail from \"./ImageDetail\";\n\nvar ImageModal = function (_super) {\n  __extends(ImageModal, _super);\n\n  function ImageModal(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._root = null;\n    _this._originImageOpacity = new Animated.Value(1);\n\n    _this._setOrigin = function () {\n      if (_this._root) {\n        _this._root.measureInWindow(function (x, y, width, height) {\n          var _a = _this.props,\n              isTranslucent = _a.isTranslucent,\n              onOpen = _a.onOpen;\n          var newY = y;\n\n          if (typeof onOpen === 'function') {\n            onOpen();\n          }\n\n          if (isTranslucent) {\n            newY += StatusBar.currentHeight ? StatusBar.currentHeight : 0;\n            StatusBar.setHidden(true);\n          }\n\n          _this.setState({\n            origin: {\n              width: width,\n              height: height,\n              x: x,\n              y: newY\n            }\n          });\n        });\n      }\n    };\n\n    _this._open = function () {\n      if (_this.props.disabled) return;\n\n      _this._setOrigin();\n\n      setTimeout(function () {\n        _this.setState({\n          isOpen: true\n        });\n      });\n      _this._root && _this._originImageOpacity.setValue(0);\n    };\n\n    _this._onClose = function () {\n      var onClose = _this.props.onClose;\n\n      _this._originImageOpacity.setValue(1);\n\n      setTimeout(function () {\n        _this.setState({\n          isOpen: false\n        });\n\n        if (typeof onClose === 'function') {\n          onClose();\n        }\n      });\n    };\n\n    var isTranslucent = props.isTranslucent;\n\n    if (Platform.OS === 'android' && isTranslucent) {\n      StatusBar.setTranslucent(isTranslucent);\n    }\n\n    _this.state = {\n      isOpen: false,\n      origin: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      }\n    };\n    Dimensions.addEventListener('change', function () {\n      setTimeout(function () {\n        _this._setOrigin();\n      }, 100);\n    });\n    return _this;\n  }\n\n  ImageModal.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        source = _a.source,\n        resizeMode = _a.resizeMode,\n        renderToHardwareTextureAndroid = _a.renderToHardwareTextureAndroid,\n        isTranslucent = _a.isTranslucent,\n        _b = _a.swipeToDismiss,\n        swipeToDismiss = _b === void 0 ? true : _b,\n        imageBackgroundColor = _a.imageBackgroundColor,\n        overlayBackgroundColor = _a.overlayBackgroundColor,\n        hideCloseButton = _a.hideCloseButton,\n        modalRef = _a.modalRef,\n        modalImageStyle = _a.modalImageStyle,\n        onLongPressOriginImage = _a.onLongPressOriginImage,\n        renderHeader = _a.renderHeader,\n        renderFooter = _a.renderFooter,\n        onTap = _a.onTap,\n        onDoubleTap = _a.onDoubleTap,\n        onLongPress = _a.onLongPress,\n        didOpen = _a.didOpen,\n        onMove = _a.onMove,\n        responderRelease = _a.responderRelease,\n        willClose = _a.willClose;\n    var _c = this.state,\n        isOpen = _c.isOpen,\n        origin = _c.origin;\n    return React.createElement(View, {\n      ref: function ref(component) {\n        _this._root = component;\n      },\n      style: [{\n        alignSelf: 'baseline',\n        backgroundColor: imageBackgroundColor\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, React.createElement(Animated.View, {\n      renderToHardwareTextureAndroid: renderToHardwareTextureAndroid === false ? false : true,\n      style: {\n        opacity: this._originImageOpacity\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      activeOpacity: 1,\n      style: {\n        alignSelf: 'baseline'\n      },\n      onPress: this._open,\n      onLongPress: onLongPressOriginImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, _extends({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    })))), React.createElement(ImageDetail, {\n      ref: modalRef,\n      renderToHardwareTextureAndroid: renderToHardwareTextureAndroid,\n      isTranslucent: isTranslucent,\n      isOpen: isOpen,\n      origin: origin,\n      source: source,\n      resizeMode: resizeMode,\n      backgroundColor: overlayBackgroundColor,\n      swipeToDismiss: swipeToDismiss,\n      hideCloseButton: hideCloseButton,\n      imageStyle: modalImageStyle,\n      renderHeader: renderHeader,\n      renderFooter: renderFooter,\n      onTap: onTap,\n      onDoubleTap: onDoubleTap,\n      onLongPress: onLongPress,\n      didOpen: didOpen,\n      onMove: onMove,\n      responderRelease: responderRelease,\n      willClose: willClose,\n      onClose: this._onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return ImageModal;\n}(React.Component);\n\nexport default ImageModal;\nexport { ImageDetail };","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport React from 'react';\nimport { Animated, View, TouchableOpacity, Image, StatusBar, Platform, Dimensions, } from 'react-native';\nimport ImageDetail from './ImageDetail';\nvar ImageModal = (function (_super) {\n    __extends(ImageModal, _super);\n    function ImageModal(props) {\n        var _this = _super.call(this, props) || this;\n        _this._root = null;\n        _this._originImageOpacity = new Animated.Value(1);\n        _this._setOrigin = function () {\n            if (_this._root) {\n                _this._root.measureInWindow(function (x, y, width, height) {\n                    var _a = _this.props, isTranslucent = _a.isTranslucent, onOpen = _a.onOpen;\n                    var newY = y;\n                    if (typeof onOpen === 'function') {\n                        onOpen();\n                    }\n                    if (isTranslucent) {\n                        newY += StatusBar.currentHeight ? StatusBar.currentHeight : 0;\n                        StatusBar.setHidden(true);\n                    }\n                    _this.setState({\n                        origin: {\n                            width: width,\n                            height: height,\n                            x: x,\n                            y: newY,\n                        },\n                    });\n                });\n            }\n        };\n        _this._open = function () {\n            if (_this.props.disabled)\n                return;\n            _this._setOrigin();\n            setTimeout(function () {\n                _this.setState({\n                    isOpen: true,\n                });\n            });\n            _this._root && _this._originImageOpacity.setValue(0);\n        };\n        _this._onClose = function () {\n            var onClose = _this.props.onClose;\n            _this._originImageOpacity.setValue(1);\n            setTimeout(function () {\n                _this.setState({\n                    isOpen: false,\n                });\n                if (typeof onClose === 'function') {\n                    onClose();\n                }\n            });\n        };\n        var isTranslucent = props.isTranslucent;\n        if (Platform.OS === 'android' && isTranslucent) {\n            StatusBar.setTranslucent(isTranslucent);\n        }\n        _this.state = {\n            isOpen: false,\n            origin: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n        };\n        Dimensions.addEventListener('change', function () {\n            setTimeout(function () {\n                _this._setOrigin();\n            }, 100);\n        });\n        return _this;\n    }\n    ImageModal.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, source = _a.source, resizeMode = _a.resizeMode, renderToHardwareTextureAndroid = _a.renderToHardwareTextureAndroid, isTranslucent = _a.isTranslucent, _b = _a.swipeToDismiss, swipeToDismiss = _b === void 0 ? true : _b, imageBackgroundColor = _a.imageBackgroundColor, overlayBackgroundColor = _a.overlayBackgroundColor, hideCloseButton = _a.hideCloseButton, modalRef = _a.modalRef, modalImageStyle = _a.modalImageStyle, onLongPressOriginImage = _a.onLongPressOriginImage, renderHeader = _a.renderHeader, renderFooter = _a.renderFooter, onTap = _a.onTap, onDoubleTap = _a.onDoubleTap, onLongPress = _a.onLongPress, didOpen = _a.didOpen, onMove = _a.onMove, responderRelease = _a.responderRelease, willClose = _a.willClose;\n        var _c = this.state, isOpen = _c.isOpen, origin = _c.origin;\n        return (<View ref={function (component) {\n            _this._root = component;\n        }} style={[{ alignSelf: 'baseline', backgroundColor: imageBackgroundColor }]}>\n        <Animated.View renderToHardwareTextureAndroid={renderToHardwareTextureAndroid === false ? false : true} style={{ opacity: this._originImageOpacity }}>\n          <TouchableOpacity activeOpacity={1} style={{ alignSelf: 'baseline' }} onPress={this._open} onLongPress={onLongPressOriginImage}>\n            <Image {...this.props}/>\n          </TouchableOpacity>\n        </Animated.View>\n        <ImageDetail ref={modalRef} renderToHardwareTextureAndroid={renderToHardwareTextureAndroid} isTranslucent={isTranslucent} isOpen={isOpen} origin={origin} source={source} resizeMode={resizeMode} backgroundColor={overlayBackgroundColor} swipeToDismiss={swipeToDismiss} hideCloseButton={hideCloseButton} imageStyle={modalImageStyle} renderHeader={renderHeader} renderFooter={renderFooter} onTap={onTap} onDoubleTap={onDoubleTap} onLongPress={onLongPress} didOpen={didOpen} onMove={onMove} responderRelease={responderRelease} willClose={willClose} onClose={this._onClose}/>\n      </View>);\n    };\n    return ImageModal;\n}(React.Component));\nexport default ImageModal;\nexport { ImageDetail };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}