{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/user/Documentos/Git/App_PDS2/src/view/Index/Main/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Plataform } from \"react-native-web/dist/index\";\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { requestPermissionsAsync, getLastKnownPositionAsync, getCurrentPositionAsync, requestForegroundPermissionsAsync } from 'expo-location';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport styles from \"./styles\";\nimport { Avatar, Badge, withBadge } from 'react-native-elements';\nimport { Fontisto } from '@expo/vector-icons';\nimport Filters from \"../FiltersMain\";\nimport Notification from \"../Notifications\";\nimport ModalEvents from \"../ModalEvents\";\nimport LoadIcon from \"../../../components/LoadIcon\";\nimport CalloutMap from \"../../../components/Callouts/CalloutLostPet\";\nimport CalloutMap_2 from \"../../../components/Callouts/CalloutCommunityHouse\";\nimport CalloutMap_3 from \"../../../components/Callouts/CalloutComplaint\";\nimport Api from \"../../Apis/Map/Api\";\n\nfunction MapScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentRegion = _useState2[0],\n      setCurrentRegion = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coords = _useState4[0],\n      setCoords = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isModalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isModalNotificationVisible = _useState8[0],\n      setModalNotificationVisible = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isModalEventsVisible = _useState10[0],\n      setModalEventsVisible = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      coordsMarker = _useState12[0],\n      setCoordsMarker = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      listevents = _useState14[0],\n      setListEvents = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      state = _useState18[0],\n      setState = _useState18[1];\n\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n\n  var toggleModalNotification = function toggleModalNotification() {\n    setModalNotificationVisible(!isModalNotificationVisible);\n    setLoading(false);\n  };\n\n  var toggleModalEvents = function toggleModalEvents(event) {\n    if (event != null) setCoordsMarker(event.nativeEvent.coordinate);\n    setModalEventsVisible(!isModalEventsVisible);\n  };\n\n  var handleLocationFinder = function handleLocationFinder() {\n    var _await$requestForegro, granted, _await$getCurrentPosi, _coords, latitude, longitude;\n\n    return _regeneratorRuntime.async(function handleLocationFinder$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(requestForegroundPermissionsAsync());\n\n          case 2:\n            _await$requestForegro = _context.sent;\n            granted = _await$requestForegro.granted;\n\n            if (!granted) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(getCurrentPositionAsync({\n              enableHighAccuracy: true\n            }));\n\n          case 7:\n            _await$getCurrentPosi = _context.sent;\n            _coords = _await$getCurrentPosi.coords;\n            setLoading(true);\n            latitude = _coords.latitude, longitude = _coords.longitude;\n            setCurrentRegion({\n              latitude: latitude,\n              longitude: longitude,\n              latitudeDelta: 0.04,\n              longitudeDelta: 0.04\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    function loadInitialPosition() {\n      var _await$requestForegro2, granted, _await$getLastKnownPo, _coords2, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadInitialPosition$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(requestForegroundPermissionsAsync());\n\n            case 3:\n              _await$requestForegro2 = _context2.sent;\n              granted = _await$requestForegro2.granted;\n\n              if (!granted) {\n                _context2.next = 14;\n                break;\n              }\n\n              setListEvents([]);\n              setState(false);\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(getLastKnownPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 10:\n              _await$getLastKnownPo = _context2.sent;\n              _coords2 = _await$getLastKnownPo.coords;\n              latitude = _coords2.latitude, longitude = _coords2.longitude;\n              setCurrentRegion({\n                latitude: latitude,\n                longitude: longitude,\n                latitudeDelta: 0.04,\n                longitudeDelta: 0.04\n              });\n\n            case 14:\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(\"error\", _context2.t0);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 16]], Promise);\n    }\n\n    loadInitialPosition();\n    if (currentRegion != null) getEvents();\n  }, []);\n  var DATA = [{\n    latitude: -18.727707,\n    longitude: -47.500065\n  }];\n\n  var getEvents = function getEvents() {\n    var res;\n    return _regeneratorRuntime.async(function getEvents$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setLoading(true);\n            setListEvents([]);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(Api.getEvents());\n\n          case 4:\n            res = _context3.sent;\n\n            if (res.status) {\n              setListEvents(res.msg.data);\n            } else {\n              alert(\"Erro ao buscar os eventos.\");\n            }\n\n            setLoading(false);\n            setState(true);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ModalEvents, {\n    isVisible: isModalEventsVisible,\n    onClose: function onClose() {\n      return toggleModalEvents();\n    },\n    navigation: navigation,\n    coordinate: coordsMarker === null ? null : coordsMarker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), React.createElement(Notification, {\n    isVisible: isModalNotificationVisible,\n    onClose: function onClose() {\n      return toggleModalNotification();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), React.createElement(MapView, {\n    initialRegion: currentRegion,\n    style: styles.map,\n    onPress: toggleModalEvents,\n    showsMyLocationButton: false,\n    showsUserLocation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, state && DATA.map(function (item, k) {\n    return React.createElement(CalloutMap, {\n      key: k,\n      data: item,\n      color: \"#FAAB64\",\n      coordinate: {\n        latitude: -18.727707,\n        longitude: -47.500065\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    });\n  })), loading && React.createElement(LoadIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.topSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnBell,\n    onPress: toggleModalNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, React.createElement(Fontisto, {\n    name: \"bell-alt\",\n    size: 30,\n    color: \"#858585\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  })), React.createElement(Badge, {\n    status: \"error\",\n    value: \"1\",\n    containerStyle: {\n      position: 'absolute',\n      top: -4,\n      right: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.locationSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnMylocation,\n    onPress: handleLocationFinder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 10\n    }\n  }, React.createElement(Icon, {\n    name: \"crosshairs\",\n    size: 20,\n    color: \"#B33BF6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 12\n    }\n  }))), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.searchSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 10\n    }\n  }, React.createElement(Icon, {\n    style: styles.searchIcon,\n    name: \"search\",\n    size: 20,\n    color: \"#000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 12\n    }\n  })), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Buscar\",\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.btnSettings,\n    onPress: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    style: styles.searchIcon2,\n    name: \"sliders\",\n    size: 20,\n    color: \"#000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }))), React.createElement(Filters, {\n    isVisible: isModalVisible,\n    onClose: function onClose() {\n      return toggleModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default MapScreen;","map":{"version":3,"sources":["/home/user/Documentos/Git/App_PDS2/src/view/Index/Main/index.js"],"names":["React","useState","useEffect","useRef","Plataform","MapView","Marker","Callout","requestPermissionsAsync","getLastKnownPositionAsync","getCurrentPositionAsync","requestForegroundPermissionsAsync","Icon","styles","Avatar","Badge","withBadge","Fontisto","Filters","Notification","ModalEvents","LoadIcon","CalloutMap","CalloutMap_2","CalloutMap_3","Api","MapScreen","navigation","currentRegion","setCurrentRegion","coords","setCoords","isModalVisible","setModalVisible","isModalNotificationVisible","setModalNotificationVisible","isModalEventsVisible","setModalEventsVisible","coordsMarker","setCoordsMarker","listevents","setListEvents","loading","setLoading","state","setState","toggleModal","toggleModalNotification","toggleModalEvents","event","nativeEvent","coordinate","handleLocationFinder","granted","enableHighAccuracy","latitude","longitude","latitudeDelta","longitudeDelta","loadInitialPosition","console","log","getEvents","DATA","res","status","msg","data","alert","map","item","k","topSection","btnBell","position","top","right","locationSection","btnMylocation","form","searchSection","btnSettings","searchIcon","input","searchIcon2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef } from 'react';\nimport { Alert, Plataform } from 'react-native';\nimport  MapView,{ Marker,Callout }  from 'react-native-maps';\nimport { Image,View,Button,Text,TextInput,TouchableOpacity, Touchable } from 'react-native';\nimport { requestPermissionsAsync,getLastKnownPositionAsync, getCurrentPositionAsync, requestForegroundPermissionsAsync } from 'expo-location';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport  styles from './styles';\nimport { Avatar, Badge, withBadge } from 'react-native-elements'\nimport { Fontisto } from '@expo/vector-icons';\nimport Filters from \"../FiltersMain\";\nimport Notification  from \"../Notifications\";\nimport ModalEvents   from '../ModalEvents';\nimport LoadIcon from \"../../../components/LoadIcon\";\nimport CalloutMap from \"../../../components/Callouts/CalloutLostPet\";\nimport CalloutMap_2 from '../../../components/Callouts/CalloutCommunityHouse';\nimport CalloutMap_3 from '../../../components/Callouts/CalloutComplaint';\nimport Api  from '../../Apis/Map/Api';\n\nfunction MapScreen({ navigation }) {\n\n    const [currentRegion,setCurrentRegion] = useState(null); \n    const [coords,setCoords] = useState(null);\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isModalNotificationVisible, setModalNotificationVisible] = useState(false);\n    const [isModalEventsVisible,setModalEventsVisible] = useState(false);\n    const [coordsMarker,setCoordsMarker] = useState([]);\n    const [listevents,setListEvents] = useState([]);\n    const [loading,setLoading] = useState(false);\n    const [state,setState] = useState(false);\n\n\n    const toggleModal = () => {\n        setModalVisible(!isModalVisible);\n    };\n\n    const toggleModalNotification = () => {\n        setModalNotificationVisible(!isModalNotificationVisible);\n        setLoading(false);\n    };\n\n    const toggleModalEvents = (event) => {\n        //console.log(event.nativeEvent.coordinate);\n        //const t=event.nativeEvent.coordinate;\n        //qconsole.log(t.longitude);\n        if( event != null )\n            setCoordsMarker(event.nativeEvent.coordinate);\n\n       \n        setModalEventsVisible(!isModalEventsVisible);\n    };\n\n \n    const handleLocationFinder = async () =>{\n\n        const { granted } = await requestForegroundPermissionsAsync();\n\n                if( granted ){\n                    const { coords } = await getCurrentPositionAsync({\n                        enableHighAccuracy: true,\n                    });\n                    \n                    \n                    setLoading(true);\n                    const { latitude, longitude  } = coords;\n                    setCurrentRegion({\n\n                        latitude,\n                        longitude,\n                        latitudeDelta:0.04,\n                        longitudeDelta:0.04,\n\n                    })\n\n\n        }\n\n  \n    }\n\n\n\n    useEffect( ()=>{\n\n        async function loadInitialPosition(){\n\n            try{\n                const { granted } = await requestForegroundPermissionsAsync();\n\n                if( granted ){\n\n                    \n                    setListEvents([]);\n                    setState(false);\n                    const { coords } = await getLastKnownPositionAsync({\n                        enableHighAccuracy: true,\n                    });\n                    \n                    const { latitude, longitude  } = coords;\n                    setCurrentRegion({\n\n                        latitude,\n                        longitude,\n                        latitudeDelta:0.04,\n                        longitudeDelta:0.04,\n\n                    })\n                    \n                   \n\n                }\n            }catch( ex ){  console.log(\"error\",ex)  }\n        }\n        \n        \n\n        loadInitialPosition();\n        if( currentRegion != null )\n         getEvents();\n\n    }, []);\n   \n\n    const DATA = [\n        {\n            latitude:-18.727707,\n            longitude: -47.500065\n        },\n        \n      ];\n\n    const getEvents = async ()=>{\n        \n        setLoading(true);\n        setListEvents([]);\n\n        let res= await Api.getEvents();\n       \n        if( res.status ){\n            \n            setListEvents(res.msg.data);\n            \n        }else{\n\n            alert(\"Erro ao buscar os eventos.\");\n        }\n\n        setLoading(false);\n        setState(true);\n    }\n\n    return (\n        <>\n         \n        <ModalEvents isVisible={isModalEventsVisible}  onClose={()=> toggleModalEvents()} navigation={navigation}  coordinate={coordsMarker === null ? null: coordsMarker} />\n        <Notification isVisible={isModalNotificationVisible} onClose={()=> toggleModalNotification()}/>\n       \n        <MapView initialRegion={currentRegion} style={ styles.map } \n        onPress={toggleModalEvents} showsMyLocationButton={false} showsUserLocation={true} \n        >\n          \n     \n        {state && DATA.map((item, k)=>{\n            \n           return ( \n                \n            <CalloutMap \n\n                key={k}  \n                data={item}\n                color=\"#FAAB64\"\n                coordinate={{ latitude:-18.727707,longitude: -47.500065 }}\n                \n            />\n            \n           );\n        })}   \n        \n        </MapView>\n        {loading && <LoadIcon/> }\n        <View style={styles.topSection}>\n\n          <TouchableOpacity style={styles.btnBell} onPress={toggleModalNotification}>\n            <Fontisto name=\"bell-alt\" size={30} color=\"#858585\" />\n          </TouchableOpacity>\n          <Badge\n            status=\"error\"\n            value=\"1\"\n            containerStyle={{ position: 'absolute', top: -4, right: 0 }}\n          />  \n                \n        </View>\n        \n       \n        <View style={styles.locationSection}>\n        \t<TouchableOpacity style={styles.btnMylocation}  onPress={handleLocationFinder} >\n          \t<Icon  name=\"crosshairs\" size={20} color=\"#B33BF6\"/>\n        \t</TouchableOpacity>\n        </View>\n        \n        <View style={styles.form}>\n\n        <View style={styles.searchSection}>    \n        \t<TouchableOpacity style={styles.btnSettings}>\n          \t<Icon style={styles.searchIcon} name=\"search\" size={20} color=\"#000\"/>\n        \t</TouchableOpacity>\n            \n            <TextInput\n                style={styles.input}\n                placeholder=\"Buscar\"\n                underlineColorAndroid=\"transparent\"\n            />\n            <TouchableOpacity style={styles.btnSettings} onPress={toggleModal} >\n                <Icon style={styles.searchIcon2} name=\"sliders\" size={20} color=\"#000\"/>\n            </TouchableOpacity>\n\n\n        </View>\n     \n        <Filters isVisible={isModalVisible} onClose={()=> toggleModal()}/>\n       \n\n        </View>\n    </>\n    );\n  }\n\n// <Button title=\"Hide modal\" onPress={toggleModal} />\nexport default MapScreen;"]},"metadata":{},"sourceType":"module"}