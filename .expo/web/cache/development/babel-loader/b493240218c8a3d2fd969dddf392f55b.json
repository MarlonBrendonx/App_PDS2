{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"../../../../config\";\nexport default {\n  checkToken: function checkToken(token) {\n    var req, json;\n    return _regeneratorRuntime.async(function checkToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/users/checkToken\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                token: token\n              })\n            }));\n\n          case 2:\n            req = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 5:\n            json = _context.sent;\n            console.log(json);\n            return _context.abrupt(\"return\", json);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  signIn: function signIn(email, password) {\n    var req, json;\n    return _regeneratorRuntime.async(function signIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/users/login\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            }));\n\n          case 2:\n            req = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 5:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  signUp: function signUp(name, email, phone, password) {\n    var req, json;\n    return _regeneratorRuntime.async(function signUp$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/users\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                email: email,\n                phone: phone,\n                password: password\n              })\n            }));\n\n          case 2:\n            req = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 5:\n            json = _context3.sent;\n            return _context3.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"sources":["/home/user/Documentos/Git/App_PDS2/src/view/Apis/SignIn-SignUp/Api.js"],"names":["checkToken","token","fetch","BASE_API","method","headers","Accept","body","JSON","stringify","req","json","console","log","signIn","email","password","signUp","name","phone"],"mappings":";AAAA;AAEA,eAAc;AAEVA,EAAAA,UAAU,EAAC,oBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEWC,KAAK,CAAIC,QAAJ,wBAAgC;AAEnDC,cAAAA,MAAM,EAAE,MAF2C;AAGnDC,cAAAA,OAAO,EAAC;AAEJC,gBAAAA,MAAM,EAAE,kBAFJ;AAGJ,gCAAgB;AAHZ,eAH2C;AAUnDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,gBAAAA,KAAK,EAALA;AAAD,eAAf;AAV6C,aAAhC,CAFhB;;AAAA;AAEDS,YAAAA,GAFC;AAAA;AAAA,6CAgBYA,GAAG,CAACC,IAAJ,EAhBZ;;AAAA;AAgBDA,YAAAA,IAhBC;AAkBPC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAlBO,6CAoBAA,IApBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFD;AA0BVG,EAAAA,MAAM,EAAC,gBAAOC,KAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEed,KAAK,CAAIC,QAAJ,mBAA2B;AAE9CC,cAAAA,MAAM,EAAE,MAFsC;AAG9CC,cAAAA,OAAO,EAAC;AAEJC,gBAAAA,MAAM,EAAE,kBAFJ;AAGJ,gCAAgB;AAHZ,eAHsC;AAU9CC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACM,gBAAAA,KAAK,EAALA,KAAD;AAAOC,gBAAAA,QAAQ,EAARA;AAAP,eAAf;AAVwC,aAA3B,CAFpB;;AAAA;AAEGN,YAAAA,GAFH;AAAA;AAAA,6CAgBgBA,GAAG,CAACC,IAAJ,EAhBhB;;AAAA;AAgBGA,YAAAA,IAhBH;AAAA,8CAkBIA,IAlBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA1BG;AAgDVM,EAAAA,MAAM,EAAC,gBAAOC,IAAP,EAAYH,KAAZ,EAAkBI,KAAlB,EAAwBH,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGed,KAAK,CAAIC,QAAJ,aAAqB;AAExCC,cAAAA,MAAM,EAAE,MAFgC;AAGxCC,cAAAA,OAAO,EAAC;AAEJC,gBAAAA,MAAM,EAAE,kBAFJ;AAGJ,gCAAgB;AAHZ,eAHgC;AAUxCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACS,gBAAAA,IAAI,EAAJA,IAAD;AAAMH,gBAAAA,KAAK,EAALA,KAAN;AAAYI,gBAAAA,KAAK,EAALA,KAAZ;AAAkBH,gBAAAA,QAAQ,EAARA;AAAlB,eAAf;AAVkC,aAArB,CAHpB;;AAAA;AAGGN,YAAAA,GAHH;AAAA;AAAA,6CAiBgBA,GAAG,CAACC,IAAJ,EAjBhB;;AAAA;AAiBGA,YAAAA,IAjBH;AAAA,8CAmBIA,IAnBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhDG,CAAd","sourcesContent":["import \"../../../../config\";\n\nexport default{\n\n    checkToken:async (token) =>{\n\n        const req = await fetch(`${BASE_API}/users/checkToken`,{\n\n            method: 'POST',\n            headers:{\n\n                Accept: 'application/json',\n                'Content-Type': 'application/json' \n\n            },\n\n            body: JSON.stringify({token})\n\n        });\n\n        const json = await req.json();\n\n        console.log(json);\n\n        return json;\n\n    },\n\n    signIn:async (email,password) =>{\n        \n        const req = await fetch(`${BASE_API}/users/login`,{\n\n            method: 'POST',\n            headers:{\n\n                Accept: 'application/json',\n                'Content-Type': 'application/json' \n\n            },\n\n            body: JSON.stringify({email,password})\n\n        });\n\n        const json = await req.json();\n        \n        return json;\n\n    },\n\n    signUp:async (name,email,phone,password) =>{\n\n     \n        const req = await fetch(`${BASE_API}/users`,{\n\n            method: 'POST',\n            headers:{\n\n                Accept: 'application/json',\n                'Content-Type': 'application/json' \n\n            },\n\n            body: JSON.stringify({name,email,phone,password})\n\n        });\n\n        const json = await req.json();\n\n        return json;\n\n    }\n\n};"]},"metadata":{},"sourceType":"module"}