{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/user/Documentos/Git/App_PDS2/src/view/SignIn/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport styles from \"./styles\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, SocialIcon } from 'react-native-elements';\nimport Api from \"../Apis/SignIn-SignUp/Api\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { NavigationActions, StackActions } from 'react-navigation';\nimport { useNetInfo } from \"@react-native-community/netinfo\";\nimport { UserContext } from \"../../context/UserContext\";\n\nfunction SignIn(_ref) {\n  var navigation = _ref.navigation;\n  var netInfo = useNetInfo();\n\n  if (netInfo.isConnected == false) {\n    navigation.navigate(\"NoInternet\");\n  }\n\n  var _useContext = useContext(UserContext),\n      userDispatch = _useContext.dispatch;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePass = _useState2[0],\n      setHidePass = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailField = _useState4[0],\n      setEmailField = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordField = _useState6[0],\n      setPasswordField = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      items = _useState8[0],\n      setItems = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var resetAction = StackActions.reset({\n    index: 0,\n    actions: [NavigationActions.navigate({\n      routeName: 'Index'\n    })]\n  });\n\n  var handleRegisterButtonClick = function handleRegisterButtonClick() {\n    navigation.navigate('SignUp');\n  };\n\n  var handleLoginButtonClick = function handleLoginButtonClick() {\n    var json;\n    return _regeneratorRuntime.async(function handleLoginButtonClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(emailField != '' && passwordField != '')) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Api.signIn(emailField, passwordField));\n\n          case 3:\n            json = _context.sent;\n\n            if (!json.status) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', json.msg.remember_token));\n\n          case 7:\n            userDispatch({\n              type: 'setName',\n              payload: {\n                name: json.msg.name\n              }\n            });\n            userDispatch({\n              type: 'setEmail',\n              payload: {\n                email: json.msg.email\n              }\n            });\n            userDispatch({\n              type: 'setPhone',\n              payload: {\n                phone: json.msg.phone\n              }\n            });\n            userDispatch({\n              type: 'setID',\n              payload: {\n                id: json.msg.id\n              }\n            });\n            navigation.navigate('Index');\n            _context.next = 16;\n            break;\n\n          case 14:\n            alert(json.msg);\n            navigation.navigate('SignIn');\n\n          case 16:\n            _context.next = 19;\n            break;\n\n          case 18:\n            alert(\"Preencha os campos!\");\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.containerLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../assets/login/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: styles.containerInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, React.createElement(Input, {\n    style: styles.input,\n    placeholder: \"Email\",\n    leftIcon: React.createElement(Icon, {\n      name: \"envelope\",\n      size: 20,\n      color: \"#B33BF6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }\n    }),\n    onChangeText: function onChangeText(t) {\n      return setEmailField(t);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 18\n    }\n  }), React.createElement(Input, {\n    style: styles.input,\n    placeholder: \"Senha\",\n    autoCorrect: false,\n    secureTextEntry: hidePass ? true : false,\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      size: 25,\n      color: \"#B33BF6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }),\n    rightIcon: React.createElement(Icon, {\n      name: hidePass ? 'eye-slash' : 'eye',\n      size: 20,\n      color: \"grey\",\n      onPress: function onPress() {\n        return setHidePass(!hidePass);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 26\n      }\n    }),\n    onChangeText: function onChangeText(t) {\n      return setPasswordField(t);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: styles.containerInputs_2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnForget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.linkEsqueceusenha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 10\n    }\n  }, \"Esqueceu a senha ?\")), React.createElement(TouchableOpacity, {\n    style: styles.btnSubmit,\n    onPress: handleLoginButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.submitText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 10\n    }\n  }, \"Entrar\")), React.createElement(Text, {\n    style: styles.txtLoginsocial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 8\n    }\n  }, \"Ou logue-se por uma rede social\")), React.createElement(View, {\n    style: styles.btnssociaisContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 6\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnSociais,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, React.createElement(SocialIcon, {\n    light: true,\n    type: \"google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.btnSociais,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, React.createElement(SocialIcon, {\n    light: true,\n    type: \"facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.btnSociais,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, React.createElement(SocialIcon, {\n    light: true,\n    type: \"twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.btnRegister,\n    onPress: handleRegisterButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.txt2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 22\n    }\n  }, \"N\\xE3o tem uma conta ? \"), React.createElement(Text, {\n    style: styles.txtRegisternow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 22\n    }\n  }, \"Registre-se agora\")));\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/home/user/Documentos/Git/App_PDS2/src/view/SignIn/index.js"],"names":["React","useState","useContext","styles","Icon","Input","SocialIcon","Api","AsyncStorage","NavigationActions","StackActions","useNetInfo","UserContext","SignIn","navigation","netInfo","isConnected","navigate","userDispatch","dispatch","hidePass","setHidePass","emailField","setEmailField","passwordField","setPasswordField","items","setItems","isLoading","setLoading","resetAction","reset","index","actions","routeName","handleRegisterButtonClick","handleLoginButtonClick","signIn","json","status","setItem","msg","remember_token","type","payload","name","email","phone","id","alert","container","containerLogo","logo","require","containerInputs","input","t","containerInputs_2","btnForget","linkEsqueceusenha","btnSubmit","submitText","txtLoginsocial","btnssociaisContainer","btnSociais","btnRegister","txt2","txtRegisternow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,UAAzB,QAA0C,OAA1C;;;;;;;AAGA,OAAQC,MAAR;AACA,OAAOC,IAAP;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAmC,uBAAnC;AACA,OAAOC,GAAP;SACSC,Y;AACT,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,kBAAhD;AAEA,SAAQC,UAAR,QAAyB,iCAAzB;AACA,SAAQC,WAAR;;AAGA,SAASC,MAAT,OAA6B;AAAA,MAAZC,UAAY,QAAZA,UAAY;AAG3B,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAEM,MAAII,OAAO,CAACC,WAAR,IAAuB,KAA3B,EAAkC;AAC9BF,IAAAA,UAAU,CAACG,QAAX,CAAoB,YAApB;AACH;;AAGP,oBAA+Bf,UAAU,CAACU,WAAD,CAAzC;AAAA,MAAgBM,YAAhB,eAAOC,QAAP;;AAEA,kBAAuClB,QAAQ,CAAC,IAAD,CAA/C;AAAA;AAAA,MAAOmB,QAAP;AAAA,MAAkBC,WAAlB;;AACA,mBAAuCpB,QAAQ,CAAC,EAAD,CAA/C;AAAA;AAAA,MAAOqB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0CtB,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOuB,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA0BxB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOyB,KAAP;AAAA,MAAcC,QAAd;;AACE,mBAAgC1B,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAO2B,SAAP;AAAA,MAAkBC,UAAlB;;AAGF,MAAMC,WAAW,GAAGpB,YAAY,CAACqB,KAAb,CAAmB;AAC7BC,IAAAA,KAAK,EAAE,CADsB;AAE7BC,IAAAA,OAAO,EAAE,CAACxB,iBAAiB,CAACQ,QAAlB,CAA2B;AAAEiB,MAAAA,SAAS,EAAE;AAAb,KAA3B,CAAD;AAFoB,GAAnB,CAApB;;AAMA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAK;AAEtCrB,IAAAA,UAAU,CAACG,QAAX,CAAoB,QAApB;AAEA,GAJD;;AAKA,MAAMmB,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAExBd,UAAU,IAAI,EAAd,IAAoBE,aAAa,IAAI,EAFb;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAKZjB,GAAG,CAAC8B,MAAJ,CAAWf,UAAX,EAAsBE,aAAtB,CALY;;AAAA;AAKxBc,YAAAA,IALwB;;AAAA,iBAOxBA,IAAI,CAACC,MAPmB;AAAA;AAAA;AAAA;;AAAA;AAAA,6CASrB/B,YAAY,CAACgC,OAAb,CAAqB,OAArB,EAA6BF,IAAI,CAACG,GAAL,CAASC,cAAtC,CATqB;;AAAA;AAW3BxB,YAAAA,YAAY,CAAC;AAEZyB,cAAAA,IAAI,EAAC,SAFO;AAGZC,cAAAA,OAAO,EAAC;AACPC,gBAAAA,IAAI,EAACP,IAAI,CAACG,GAAL,CAASI;AADP;AAHI,aAAD,CAAZ;AAQA3B,YAAAA,YAAY,CAAC;AAEZyB,cAAAA,IAAI,EAAC,UAFO;AAGZC,cAAAA,OAAO,EAAC;AACPE,gBAAAA,KAAK,EAACR,IAAI,CAACG,GAAL,CAASK;AADR;AAHI,aAAD,CAAZ;AAUA5B,YAAAA,YAAY,CAAC;AAEZyB,cAAAA,IAAI,EAAC,UAFO;AAGZC,cAAAA,OAAO,EAAC;AACPG,gBAAAA,KAAK,EAACT,IAAI,CAACG,GAAL,CAASM;AADR;AAHI,aAAD,CAAZ;AAUA7B,YAAAA,YAAY,CAAC;AAEZyB,cAAAA,IAAI,EAAC,OAFO;AAGZC,cAAAA,OAAO,EAAC;AACPI,gBAAAA,EAAE,EAACV,IAAI,CAACG,GAAL,CAASO;AADL;AAHI,aAAD,CAAZ;AAWElC,YAAAA,UAAU,CAACG,QAAX,CAAoB,OAApB;AAlDyB;AAAA;;AAAA;AAwD3BgC,YAAAA,KAAK,CAACX,IAAI,CAACG,GAAN,CAAL;AACA3B,YAAAA,UAAU,CAACG,QAAX,CAAoB,QAApB;;AAzD2B;AAAA;AAAA;;AAAA;AA+D5BgC,YAAAA,KAAK,CAAC,qBAAD,CAAL;;AA/D4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAoEM,SAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAG9C,MAAM,CAAC+C,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/C,MAAM,CAACgD,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACX,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAGhD,MAAM,CAACiD,IAAtB;AAA6B,IAAA,MAAM,EAAEC,OAAO,+BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElD,MAAM,CAACmD,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACG,IAAA,KAAK,EAAEnD,MAAM,CAACoD,KADjB;AAEQ,IAAA,WAAW,EAAC,OAFpB;AAGQ,IAAA,QAAQ,EACR,oBAAC,IAAD;AACC,MAAA,IAAI,EAAC,UADN;AAEO,MAAA,IAAI,EAAE,EAFb;AAGM,MAAA,KAAK,EAAC,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAUV,IAAA,YAAY,EAAE,sBAAAC,CAAC;AAAA,aAAEjC,aAAa,CAACiC,CAAD,CAAf;AAAA,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAcV,oBAAC,KAAD;AACkB,IAAA,KAAK,EAAErD,MAAM,CAACoD,KADhC;AAEkB,IAAA,WAAW,EAAC,OAF9B;AAGkB,IAAA,WAAW,EAAE,KAH/B;AAIkB,IAAA,eAAe,EAAEnC,QAAQ,GAAG,IAAH,GAAU,KAJrD;AAKkB,IAAA,QAAQ,EACJ,oBAAC,IAAD;AACC,MAAA,IAAI,EAAC,MADN;AAER,MAAA,IAAI,EAAE,EAFE;AAGC,MAAA,KAAK,EAAC,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANtB;AAYkB,IAAA,SAAS,EACR,oBAAC,IAAD;AACC,MAAA,IAAI,EAAEA,QAAQ,GAAG,WAAH,GAAiB,KADhC;AAEI,MAAA,IAAI,EAAE,EAFV;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,OAAO,EAAE;AAAA,eAAMC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbnB;AAoBA,IAAA,YAAY,EAAE,sBAAAoC,CAAC;AAAA,aAAE/B,gBAAgB,CAAC+B,CAAD,CAAlB;AAAA,KApBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdU,CAJJ,EAyCQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErD,MAAM,CAACsD,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACb,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEtD,MAAM,CAACuD,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvD,MAAM,CAACwD,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADa,EAKb,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAExD,MAAM,CAACyD,SAAhC;AAA2C,IAAA,OAAO,EAAExB,sBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjC,MAAM,CAAC0D,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CALa,EASb,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1D,MAAM,CAAC2D,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCATa,CAzCR,EAqDP,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3D,MAAM,CAAC4D,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE5D,MAAM,CAAC6D,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACgB,oBAAC,UAAD;AACI,IAAA,KAAK,MADT;AAEO,IAAA,IAAI,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,CADD,EAOC,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE7D,MAAM,CAAC6D,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACgB,oBAAC,UAAD;AACI,IAAA,KAAK,MADT;AAEO,IAAA,IAAI,EAAC,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,CAPD,EAaC,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE7D,MAAM,CAAC6D,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACgB,oBAAC,UAAD;AACI,IAAA,KAAK,MADT;AAEO,IAAA,IAAI,EAAC,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,CAbD,CArDO,EAyEP,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE7D,MAAM,CAAC8D,WAAhC;AAA6C,IAAA,OAAO,EAAE9B,yBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACgB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhC,MAAM,CAAC+D,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADhB,EAEgB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,MAAM,CAACgE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFhB,CAzEO,CAFJ;AAkFP;;AACD,eAAetD,MAAf","sourcesContent":["import React, { useState,useContext} from 'react';\nimport { View,KeyboardAvoidingView,Image\n,TouchableOpacity,Text,Animated } from 'react-native';\nimport  styles from './styles'\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Input, SocialIcon  } from 'react-native-elements';\nimport Api  from '../Apis/SignIn-SignUp/Api';\nimport  {AsyncStorage}  from 'react-native';\nimport { NavigationActions, StackActions } from 'react-navigation';\n//import { UserContext } from '../../context/UserContext';\nimport {useNetInfo} from \"@react-native-community/netinfo\";\nimport {UserContext} from '../../context/UserContext';\n\n\nfunction SignIn({navigation}){\n\n\t\t//const{ dispatch: userDispatch } = useContext(UserContext);\n\t\tconst netInfo = useNetInfo();\n\n        if( netInfo.isConnected == false ){\n            navigation.navigate(\"NoInternet\");\n        }\n\n\t\t\n\t\tconst {dispatch:userDispatch} =useContext(UserContext);\n\n\t\tconst [hidePass,  setHidePass]     \t\t= useState(true);\n\t\tconst [emailField, setEmailField]  \t\t= useState('');\n\t\tconst [passwordField, setPasswordField] = useState('');\n\t\tconst [items, setItems] = useState([]);\n  \t\tconst [isLoading, setLoading] = useState(false);\n\t\t\n\n\t\tconst resetAction = StackActions.reset({\n            index: 0,\n            actions: [NavigationActions.navigate({ routeName: 'Index' })],\n        });\n\n\n\t\tconst handleRegisterButtonClick = () =>{\n\n\t\t\tnavigation.navigate('SignUp');   \n\t\t\t\n\t\t};\n\t\tconst handleLoginButtonClick = async() =>{\n\n\t\t\t  if( emailField != '' && passwordField != '' ){\n\n\t\t\t\t\n\t\t\t\t\tlet json= await Api.signIn(emailField,passwordField);\n\t\t\t\t\t\n\t\t\t\t\tif( json.status ){\n\t\t\t\t\t\t\n\t\t\t\t\t\tawait AsyncStorage.setItem('token',json.msg.remember_token);\n\n\t\t\t\t\t\tuserDispatch({\n\n\t\t\t\t\t\t\ttype:'setName',\n\t\t\t\t\t\t\tpayload:{\n\t\t\t\t\t\t\t\tname:json.msg.name\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\tuserDispatch({\n\n\t\t\t\t\t\t\ttype:'setEmail',\n\t\t\t\t\t\t\tpayload:{\n\t\t\t\t\t\t\t\temail:json.msg.email\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tuserDispatch({\n\n\t\t\t\t\t\t\ttype:'setPhone',\n\t\t\t\t\t\t\tpayload:{\n\t\t\t\t\t\t\t\tphone:json.msg.phone\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tuserDispatch({\n\n\t\t\t\t\t\t\ttype:'setID',\n\t\t\t\t\t\t\tpayload:{\n\t\t\t\t\t\t\t\tid:json.msg.id\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\n\t\t\t  \t\t\tnavigation.navigate('Index');\n\t\t\t\t\t\t//navigation.dispatch(resetAction);\n\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\talert(json.msg);\n\t\t\t\t\t\tnavigation.navigate('SignIn'); \n\n\t\t\t\t\t}\n\n\t\t\t  }else{\n\n\t\t\t\t\talert(\"Preencha os campos!\");\n\t\t\t  }\n\t\t\t\t\n\t\t};\n\t\n        return (\n            \n            <View style={ styles.container}  >\n                <View style={styles.containerLogo}>\n\t\t\t\t\t<Image style={ styles.logo } source={require('../../assets/login/logo.png')}   />\n\t\t\t\t</View>\n                <View style={styles.containerInputs}>  \n                \t<Input\n                \t \t style={styles.input}\n                         placeholder='Email'\n                         leftIcon={\n                        \t<Icon\n   \t                \t    \tname='envelope'\n                                size={20}\n                              \tcolor='#B33BF6'\n                            />\n                         }\n\t\t\t\t\t\t onChangeText={t=>setEmailField(t)}\n                        />\n\n \t\t\t\t\t<Input\n                        style={styles.input}\n                        placeholder='Senha'\n                        autoCorrect={false}\n                        secureTextEntry={hidePass ? true : false}\n                        leftIcon={\n                            <Icon\n                            \tname='lock'\n\t\t                \t\tsize={25}\n                            \tcolor='#B33BF6'\n                            />\n                        }\n                        rightIcon={\n                        \t<Icon\n                \t\t        name={hidePass ? 'eye-slash' : 'eye'}\n                \t            size={20}\n            \t                color=\"grey\"\n        \t                    onPress={() => setHidePass(!hidePass)}\n                            />\n                        }\n\t\t\t\t\t\tonChangeText={t=>setPasswordField(t)}\n                        />                       \n\t\t\t\t    </View>\n                    <View style={styles.containerInputs_2}>  \n\t\t\t\t\t\t\t<TouchableOpacity style={styles.btnForget} >\n\t\t\t\t\t\t\t\t\t<Text style={styles.linkEsqueceusenha}>Esqueceu a senha ?</Text>\n\t\t\t\t\t\t\t</TouchableOpacity> \n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<TouchableOpacity style={styles.btnSubmit} onPress={handleLoginButtonClick}>\n\t\t\t\t\t\t\t\t\t<Text style={styles.submitText}>Entrar</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Text style={styles.txtLoginsocial}>Ou logue-se por uma rede social</Text>\n                    </View>\n\n\t\t\t\t\t<View style={styles.btnssociaisContainer}>\n\t\t\t\t\t\t<TouchableOpacity style={styles.btnSociais}>\n            \t        \t<SocialIcon\n        \t        \t        light\n    \t                        type='google'\n                \t        />            \n                        </TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity style={styles.btnSociais}>\n            \t        \t<SocialIcon\n        \t        \t        light\n    \t                        type='facebook'\n                \t        />            \n                        </TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity style={styles.btnSociais}>\n            \t        \t<SocialIcon\n        \t        \t        light\n    \t                        type='twitter'\n                \t        />            \n                        </TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t\t<TouchableOpacity style={styles.btnRegister} onPress={handleRegisterButtonClick}>\n                    \t<Text style={styles.txt2}>Não tem uma conta ? </Text>\n\t                    <Text style={styles.txtRegisternow}>Registre-se agora</Text>\n                    </TouchableOpacity>\n            </View>\n\t\t\n        );\n}\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}