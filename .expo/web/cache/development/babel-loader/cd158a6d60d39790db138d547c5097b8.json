{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"../../../../config\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nexport default {\n  registerEvent: function registerEvent(type, status, latitude, longitude, information, animal_id, user_id) {\n    var req, json;\n    return _regeneratorRuntime.async(function registerEvent$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/events\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                type: type,\n                status: status,\n                latitude: latitude,\n                longitude: longitude,\n                information: information,\n                animal_id: animal_id,\n                user_id: user_id\n              })\n            }));\n\n          case 2:\n            req = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 5:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getEvents: function getEvents() {\n    var token, req, json;\n    return _regeneratorRuntime.async(function getEvents$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/events/get\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                token: token\n              })\n            }));\n\n          case 5:\n            req = _context2.sent;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 8:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"sources":["/home/user/Documentos/Git/App_PDS2/src/view/Apis/Map/Api.js"],"names":["AsyncStorage","registerEvent","type","status","latitude","longitude","information","animal_id","user_id","fetch","BASE_API","method","headers","Accept","body","JSON","stringify","req","json","getEvents","getItem","token"],"mappings":";AAAA;SACSA,Y;AAET,eAAc;AAEVC,EAAAA,aAAa,EAAC,uBAAOC,IAAP,EAAYC,MAAZ,EAAmBC,QAAnB,EAA4BC,SAA5B,EAAsCC,WAAtC,EAAkDC,SAAlD,EAA4DC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGQC,KAAK,CAAIC,QAAJ,cAAsB;AAEzCC,cAAAA,MAAM,EAAE,MAFiC;AAGzCC,cAAAA,OAAO,EAAC;AAEJC,gBAAAA,MAAM,EAAE,kBAFJ;AAGJ,gCAAgB;AAHZ,eAHiC;AAUzCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACd,gBAAAA,IAAI,EAAJA,IAAD;AAAMC,gBAAAA,MAAM,EAANA,MAAN;AAAaC,gBAAAA,QAAQ,EAARA,QAAb;AAAsBC,gBAAAA,SAAS,EAATA,SAAtB;AAAgCC,gBAAAA,WAAW,EAAXA,WAAhC;AAA4CC,gBAAAA,SAAS,EAATA,SAA5C;AAAsDC,gBAAAA,OAAO,EAAPA;AAAtD,eAAf;AAVmC,aAAtB,CAHb;;AAAA;AAGJS,YAAAA,GAHI;AAAA;AAAA,6CAiBSA,GAAG,CAACC,IAAJ,EAjBT;;AAAA;AAiBJA,YAAAA,IAjBI;AAAA,6CAoBHA,IApBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFJ;AA0BVC,EAAAA,SAAS,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcnB,YAAY,CAACoB,OAAb,CAAqB,OAArB,CAFd;;AAAA;AAEAC,YAAAA,KAFA;AAAA;AAAA,6CAGaZ,KAAK,CAAIC,QAAJ,kBAA0B;AAElDC,cAAAA,MAAM,EAAE,MAF0C;AAGlDC,cAAAA,OAAO,EAAC;AAEJC,gBAAAA,MAAM,EAAE,kBAFJ;AAGJ,gCAAgB;AAHZ,eAH0C;AAUlDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACK,gBAAAA,KAAK,EAALA;AAAD,eAAf;AAV4C,aAA1B,CAHlB;;AAAA;AAGAJ,YAAAA,GAHA;AAAA;AAAA,6CAiBaA,GAAG,CAACC,IAAJ,EAjBb;;AAAA;AAiBAA,YAAAA,IAjBA;AAAA,8CAmBCA,IAnBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA,CAAd","sourcesContent":["import \"../../../../config\";\nimport { AsyncStorage } from \"react-native\";\n\nexport default{\n\n    registerEvent:async (type,status,latitude,longitude,information,animal_id,user_id)=>{\n       \n       \n        const req = await fetch(`${BASE_API}/events`,{\n\n            method: 'POST',\n            headers:{\n\n                Accept: 'application/json',\n                'Content-Type': 'application/json' \n\n            },\n\n            body: JSON.stringify({type,status,latitude,longitude,information,animal_id,user_id})\n\n        });\n\n        const json = await req.json();\n        \n\n        return json;\n\n    },\n\n    getEvents:async () =>{\n\n        const token = await AsyncStorage.getItem('token');\n        const req =  await fetch(`${BASE_API}/events/get`,{\n\n        method: 'POST',\n        headers:{\n\n            Accept: 'application/json',\n            'Content-Type': 'application/json' \n\n        },\n\n        body: JSON.stringify({token})\n\n        });\n        \n        const json = await req.json();\n       \n        return json;\n\n    }\n\n};"]},"metadata":{},"sourceType":"module"}