{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/user/Documentos/Git/App_PDS2/src/components/SwipeList/swipe_value_based_ui.js\";\nimport React, { useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SwipeListView } from 'react-native-swipe-list-view';\nvar rowSwipeAnimatedValues = {};\nArray(1).fill('').forEach(function (_, i) {\n  rowSwipeAnimatedValues[\"\" + i] = new Animated.Value(0);\n});\nexport default function SwipeValueBasedUi(props) {\n  var _this = this;\n\n  var _useState = useState(Array(1).fill('').map(function (_, i) {\n    return {\n      key: \"\" + i,\n      text: \"item #\" + i\n    };\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      listData = _useState2[0],\n      setListData = _useState2[1];\n\n  var closeRow = function closeRow(rowMap, rowKey) {\n    if (rowMap[rowKey]) {\n      rowMap[rowKey].closeRow();\n    }\n  };\n\n  var deleteRow = function deleteRow(rowMap, rowKey) {\n    closeRow(rowMap, rowKey);\n\n    var newData = _toConsumableArray(listData);\n\n    var prevIndex = listData.findIndex(function (item) {\n      return item.key === rowKey;\n    });\n    newData.splice(prevIndex, 1);\n    setListData(newData);\n  };\n\n  var onRowDidOpen = function onRowDidOpen(rowKey) {\n    console.log('This row opened', rowKey);\n  };\n\n  var onSwipeValueChange = function onSwipeValueChange(swipeData) {\n    var key = swipeData.key,\n        value = swipeData.value;\n    rowSwipeAnimatedValues[key].setValue(Math.abs(value));\n  };\n\n  var renderItem = function renderItem(data) {\n    return React.createElement(TouchableHighlight, {\n      onPress: function onPress() {\n        return console.log('You touched me');\n      },\n      style: styles(props).rowFront,\n      underlayColor: '#AAA',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Notificacao\")));\n  };\n\n  var renderHiddenItem = function renderHiddenItem(data, rowMap) {\n    return React.createElement(View, {\n      style: styles(props).rowBack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: [styles(props).backRightBtn, styles(props).backRightBtnLeft],\n      onPress: function onPress() {\n        return closeRow(rowMap, data.item.key);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles(props).backTextWhite,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Fechar\")), React.createElement(TouchableOpacity, {\n      style: [styles(props).backRightBtn, styles(props).backRightBtnRight],\n      onPress: function onPress() {\n        return deleteRow(rowMap, data.item.key);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.View, {\n      style: [styles(props).trash, {\n        transform: [{\n          scale: rowSwipeAnimatedValues[data.item.key].interpolate({\n            inputRange: [45, 90],\n            outputRange: [0, 1],\n            extrapolate: 'clamp'\n          })\n        }]\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/main/trash.png\"),\n      style: styles(props).trash,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }))));\n  };\n\n  return React.createElement(SwipeListView, {\n    data: listData,\n    renderItem: renderItem,\n    renderHiddenItem: renderHiddenItem,\n    leftOpenValue: 75,\n    rightOpenValue: -150,\n    previewRowKey: '0',\n    previewOpenValue: -40,\n    previewOpenDelay: 3000,\n    onRowDidOpen: onRowDidOpen,\n    onSwipeValueChange: onSwipeValueChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  });\n}\n\nvar styles = function styles(props) {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'white',\n      flex: 1,\n      borderRadius: 30\n    },\n    backTextWhite: {\n      color: '#FFF'\n    },\n    rowFront: {\n      alignItems: 'center',\n      backgroundColor: 'white',\n      borderBottomColor: '#A9A8A8',\n      borderBottomWidth: 0.5,\n      borderLeftWidth: 5,\n      borderLeftColor: props.color,\n      justifyContent: 'center',\n      height: 80\n    },\n    rowBack: {\n      alignItems: 'center',\n      backgroundColor: 'white',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingLeft: 15\n    },\n    backRightBtn: {\n      alignItems: 'center',\n      bottom: 0,\n      justifyContent: 'center',\n      position: 'absolute',\n      top: 0,\n      width: 75\n    },\n    backRightBtnLeft: {\n      backgroundColor: '#5cc5c0',\n      right: 75,\n      borderRadius: 2\n    },\n    backRightBtnRight: {\n      backgroundColor: 'red',\n      right: 0\n    },\n    trash: {\n      height: 20,\n      width: 20\n    }\n  });\n};","map":{"version":3,"sources":["/home/user/Documentos/Git/App_PDS2/src/components/SwipeList/swipe_value_based_ui.js"],"names":["React","useState","SwipeListView","rowSwipeAnimatedValues","Array","fill","forEach","_","i","Animated","Value","SwipeValueBasedUi","props","map","key","text","listData","setListData","closeRow","rowMap","rowKey","deleteRow","newData","prevIndex","findIndex","item","splice","onRowDidOpen","console","log","onSwipeValueChange","swipeData","value","setValue","Math","abs","renderItem","data","styles","rowFront","renderHiddenItem","rowBack","backRightBtn","backRightBtnLeft","backTextWhite","backRightBtnRight","trash","transform","scale","interpolate","inputRange","outputRange","extrapolate","require","StyleSheet","create","container","backgroundColor","flex","borderRadius","color","alignItems","borderBottomColor","borderBottomWidth","borderLeftWidth","borderLeftColor","justifyContent","height","flexDirection","paddingLeft","bottom","position","top","width","right"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Animated,\n    Image,\n    StyleSheet,\n    Text,\n    TouchableOpacity,\n    TouchableHighlight,\n    View,\n} from 'react-native';\n\nimport { SwipeListView } from 'react-native-swipe-list-view';\n\nconst rowSwipeAnimatedValues = {};\nArray(1)\n    .fill('')\n    .forEach((_, i) => {\n        rowSwipeAnimatedValues[`${i}`] = new Animated.Value(0);\n    });\n\nexport default function SwipeValueBasedUi(props) {\n\n    const [listData, setListData] = useState(\n        Array(1)\n            .fill('')\n            .map((_, i) => ({ key: `${i}`, text: `item #${i}` }))\n    );\n\n    const closeRow = (rowMap, rowKey) => {\n        if (rowMap[rowKey]) {\n            rowMap[rowKey].closeRow();\n        }\n    };\n\n    const deleteRow = (rowMap, rowKey) => {\n        closeRow(rowMap, rowKey);\n        const newData = [...listData];\n        const prevIndex = listData.findIndex(item => item.key === rowKey);\n        newData.splice(prevIndex, 1);\n        setListData(newData);\n    };\n\n    const onRowDidOpen = rowKey => {\n        console.log('This row opened', rowKey);\n    };\n\n    const onSwipeValueChange = swipeData => {\n        const { key, value } = swipeData;\n        rowSwipeAnimatedValues[key].setValue(Math.abs(value));\n    };\n\n    const renderItem = data => (\n        <TouchableHighlight\n            onPress={() => console.log('You touched me')}\n            style={ styles(props).rowFront }\n            underlayColor={'#AAA'}\n        >   \n            \n            <View>\n                <Text>Notificacao</Text>\n            </View>\n        </TouchableHighlight>\n    );\n\n    const renderHiddenItem = (data, rowMap) => (\n        <View style={styles(props).rowBack}>\n            <Text></Text>\n            <TouchableOpacity\n                style={[styles(props).backRightBtn, styles(props).backRightBtnLeft]}\n                onPress={() => closeRow(rowMap, data.item.key)}\n            >\n                <Text style={styles(props).backTextWhite}>Fechar</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={[styles(props).backRightBtn, styles(props).backRightBtnRight]}\n                onPress={() => deleteRow(rowMap, data.item.key)}\n            >\n                <Animated.View\n                    style={[\n                        styles(props).trash,\n                        {\n                            transform: [\n                                {\n                                    scale: rowSwipeAnimatedValues[\n                                        data.item.key\n                                    ].interpolate({\n                                        inputRange: [45, 90],\n                                        outputRange: [0, 1],\n                                        extrapolate: 'clamp',\n                                    }),\n                                },\n                            ],\n                        },\n                    ]}\n                >\n                    <Image\n                        source={require('../../assets/main/trash.png')}\n                        style={styles(props).trash}\n                    />\n                </Animated.View>\n            </TouchableOpacity>\n        </View>\n    );\n\n    return (\n       \n            <SwipeListView\n                data={listData}\n                renderItem={renderItem}\n                renderHiddenItem={renderHiddenItem}\n                leftOpenValue={75}\n                rightOpenValue={-150}\n                previewRowKey={'0'}\n                previewOpenValue={-40}\n                previewOpenDelay={3000}\n                onRowDidOpen={onRowDidOpen}\n                onSwipeValueChange={onSwipeValueChange}\n               \n            />\n        \n    );\n}\n\nconst styles = (props) => StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        flex: 1,\n        borderRadius:30\n    },\n    backTextWhite: {\n        color: '#FFF',\n    },\n    rowFront: {\n\n        alignItems: 'center',\n        backgroundColor: 'white',\n        borderBottomColor: '#A9A8A8',\n        borderBottomWidth: 0.5,\n        borderLeftWidth:5,\n        borderLeftColor:props.color,\n        justifyContent: 'center',\n        height: 80,\n \n        \n    },\n    rowBack: {\n\n        alignItems: 'center',\n        backgroundColor: 'white',\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingLeft: 15,\n    \n        \n    },\n    backRightBtn: {\n        alignItems: 'center',\n        bottom: 0,\n        justifyContent: 'center',\n        position: 'absolute',\n        top: 0,\n        width: 75,\n     \n        \n    },\n    backRightBtnLeft: {\n        backgroundColor: '#5cc5c0',\n        right: 75,\n        borderRadius:2\n    },\n    backRightBtnRight: {\n        backgroundColor: 'red',\n        right: 0,\n       \n    },\n    trash: {\n        height: 20,\n        width: 20,\n    },\n   \n});\n"]},"metadata":{},"sourceType":"module"}